{"version":3,"sources":["images/favicon.png","layout/Login.jsx"],"names":["Login","useState","email","setEmail","emailInvalid","setEmailInvalid","code","setCode","codeInvalid","setCodeInvalid","success","setSuccess","validity","setValidity","valid","setValid","right","setRight","setError","btnloading","setBtnloading","loadBtn","setLoadBtn","open","message","type","alertState","setAlertState","otpApi","a","form","axios","post","process","res","data","response","status_code","errors","errArr","Object","keys","length","error","forEach","key","loginApi","password","localStorage","setItem","access_token","refresh_token","sessionStorage","JSON","stringify","useEffect","getItem","tokenData","token","headers","Authorization","slice","get","then","info","first_name","last_name","role","window","location","href","catch","err","otpClick","handleSubmit","e","preventDefault","handleAlertClose","timer","setTimeout","setTimer","clearTimeout","React","counter","setCounter","setInterval","clearInterval","NewHeader","className","src","account","alt","action","onSubmit","value","name","onChange","target","pattern","required","htmlFor","onClick","disabled","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","Alert","severity","variant"],"mappings":"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","file":"static/js/17.8ebde208.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/favicon.d8fa18db.png\";","import React, { useEffect, useState } from \"react\";\n// import Sign from \"./Sign\";\nimport account from \"../images/favicon.png\";\n// import profile from \"../image/profile.png\";\n// import clear from \"../images/clear.png\";\n// import \"semantic-ui-css/semantic.min.css\";\n// import { NavHashLink } from \"react-router-hash-link\";\n// import useWindowSize from \"../utils/useWindowSize\";\nimport axios from \"axios\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport NewHeader from \"./NewHeader\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailInvalid, setEmailInvalid] = useState(false);\n  const [code, setCode] = useState(\"\");\n  const [codeInvalid, setCodeInvalid] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [validity, setValidity] = useState(false);\n  const [valid, setValid] = useState(false);\n  const [right, setRight] = useState(false);\n  const [error, setError] = useState({});\n  const [btnloading, setBtnloading] = useState(false);\n  const [loadBtn, setLoadBtn] = useState(false);\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: \"\",\n    type: \"success\",\n  });\n\n  const otpApi = async () => {\n    const form = {\n      type: \"login\",\n      email: email,\n    };\n    // console.log(form);\n    if (validity) {\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_PUBLIC_URL}send-otp`,\n          form\n        );\n        // .then((res) => {\n        if (res) {\n          //   console.log(\"response msg\", res);\n          setSuccess(res.data.success);\n          //   console.log(success);\n          setBtnloading(false);\n          const { message = \"Otp sent successfully\" } = res.data;\n          setAlertState({ open: true, message, type: \"success\" });\n          // }\n        }\n      } catch (err) {\n        // console.log(err);\n        const {\n          message = \"Sorry! We are unable to process your request.\",\n          status_code,\n          errors = {},\n        } = (err.response && err.response.data) || {};\n\n        setSuccess(false);\n        // console.log(success);\n        setBtnloading(false);\n\n        const errArr = Object.keys(errors);\n        if (status_code === 422 && errArr.length) {\n          const error = {};\n          errArr.forEach((key) => (error[key] = errors[key][0]));\n          setError(error);\n        } else {\n          setAlertState({ open: true, message, type: \"error\" });\n        }\n      }\n    }\n  };\n\n  const loginApi = async () => {\n    const form = {\n      email: email,\n      password: code,\n    };\n    if (valid) {\n      // console.log(form);\n      try {\n        const res = await axios.post(\n          `${process.env.REACT_APP_PUBLIC_URL}login`,\n          form\n        );\n        if (res) {\n          // console.log(\"response msg\", res.data);\n          localStorage.setItem(\"accessToken\", res.data.access_token);\n          localStorage.setItem(\"refresh-token\", res.data.refresh_token);\n          //   setLogin(true);\n          setRight(true);\n          // console.log(code, res);\n          setLoadBtn(false);\n          sessionStorage.setItem(\"logged\", true);\n          sessionStorage.setItem(\"mailed\", JSON.stringify(email));\n          //   window.location.reload();\n        }\n      } catch (err) {\n        // console.log(err);\n        const {\n          message = \"Sorry! We are unable to process your request.\",\n          status_code,\n          errors = {},\n        } = (err.response && err.response.data) || {};\n\n        setSuccess(false);\n        // console.log(success);\n        setLoadBtn(false);\n\n        const errArr = Object.keys(errors);\n        if (status_code === 422 && errArr.length) {\n          const error = {};\n          errArr.forEach((key) => (error[key] = errors[key][0]));\n          setError(error);\n        } else {\n          setAlertState({ open: true, message, type: \"error\" });\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"accessToken\") !== null) {\n      setRight(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (right) {\n      const tokenData = localStorage.getItem(\"accessToken\");\n      const token = JSON.stringify(tokenData);\n      //   console.log(token.slice(1, -1));\n      const headers = {\n        Authorization: `Bearer ${token.slice(1, -1)}`,\n      };\n      //   console.log(headers);\n      // if (right) {\n      axios\n        .get(`${process.env.REACT_APP_PUBLIC_URL}user-profile`, {\n          headers: headers,\n        })\n        .then((res) => {\n          if (res) {\n            const info = res.data.data;\n            // console.log(\"response user profile msg\", info);\n            localStorage.setItem(\"email\", info.email);\n            // localStorage.setItem(\"info\", JSON.stringify(info));\n            localStorage.setItem(\n              \"name\",\n              `${info.first_name} ${info.last_name}`\n            );\n            // localStorage.setItem(\"mobile\", info.mobile);\n            localStorage.setItem(\"role\", info.role);\n            if (info.role === \"admin\" || info.role === \"assistant_admin\") {\n              window.location.href = \"/leads\";\n            }\n            setSuccess(res.data.success);\n            // console.log(success);\n          }\n        })\n        .catch((err) => {\n          // console.warn(err);\n          const {\n            message = \"Sorry! We are unable to process your request.\",\n            status_code,\n            errors = {},\n          } = (err.response && err.response.data) || {};\n\n          // setSuccess(false);\n          // console.log(success);\n          // setLoadBtn(false);\n\n          const errArr = Object.keys(errors);\n          if (status_code === 422 && errArr.length) {\n            const error = {};\n            errArr.forEach((key) => (error[key] = errors[key][0]));\n            setError(error);\n          } else {\n            setAlertState({ open: true, message, type: \"error\" });\n          }\n        });\n      // }\n    }\n  }, [right]);\n\n  const otpClick = async () => {\n    if (!emailInvalid && email !== \"\") {\n      //   console.log(\"email empty\", email !== \"\");\n      //   console.log(\"email invalid\", !emailInvalid);\n      setValidity(true);\n      setBtnloading(true);\n    }\n    otpApi();\n  };\n\n  useEffect(async () => {\n    otpApi();\n  }, [setValidity, validity]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!(codeInvalid && emailInvalid)) {\n      setValid(true);\n      setLoadBtn(true);\n    }\n    loginApi();\n  };\n  useEffect(async () => {\n    loginApi();\n  }, [setValid, valid]);\n\n  const handleAlertClose = () => {\n    setAlertState({ open: false, message: \"\", type: \"success\" });\n  };\n\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        setTimer(false);\n      }, 30000);\n      return () => clearTimeout(timer);\n    }\n  }, [setSuccess, success]);\n\n  const [counter, setCounter] = React.useState(30);\n  const [timer, setTimer] = useState(true);\n  useEffect(() => {\n    if (success) {\n      const timer =\n        counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n      return () => clearInterval(timer);\n    }\n    // console.log(counter);\n  }, [counter, setSuccess, success]);\n\n  return (\n    <>\n      <NewHeader />\n      <div className=\"login\">\n        <div className=\"container\">\n          <img src={account} alt=\"logo\" />\n          <form action=\"post\" className=\"loginForm\" onSubmit={handleSubmit}>\n            <div className=\"otp\">\n              <div className=\"textInput\">\n                <div className=\"text-input\">\n                  <input\n                    className=\"input\"\n                    value={email}\n                    name=\"email\"\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                      setEmailInvalid(!e.target.validity.valid);\n                    }}\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$\"\n                    type=\"email\"\n                    required\n                  />\n                  <label htmlFor=\"email\" className=\"input-placeholder\">\n                    Email<span>*</span>\n                  </label>\n                </div>\n                {emailInvalid ? (\n                  <p className=\"error-text\">Please provide a valid email Id</p>\n                ) : null}\n              </div>\n              {success ? (\n                <button\n                  className={`redBtn resend`}\n                  type=\"button\"\n                  onClick={otpClick}\n                  disabled={timer}\n                >\n                  {counter === 0 ? \"Re-send OTP\" : `Re-send OTP(${counter})`}\n                </button>\n              ) : (\n                <button\n                  className={`redBtn`}\n                  type=\"button\"\n                  // onClick={() => setInvalid(emailInvalid)}\n                  onClick={otpClick}\n                  disabled={btnloading}\n                >\n                  {btnloading ? `Sending...` : `Send OTP`}\n                  {/* Send OTP */}\n                </button>\n              )}\n            </div>\n            {success ? (\n              <div className=\"otp\">\n                <div className=\"textInput\">\n                  <div className=\"text-input\">\n                    <input\n                      value={code}\n                      type=\"number\"\n                      className=\"input\"\n                      name=\"code\"\n                      onChange={(e) => {\n                        setCode(e.target.value);\n                        setCodeInvalid(!e.target.validity.valid);\n                      }}\n                      pattern=\"[0-9]{6}\"\n                      required\n                    />\n                    <label htmlFor=\"code\" className=\"input-placeholder\">\n                      Enter OTP<span>*</span>\n                    </label>\n                  </div>\n                  {codeInvalid ? (\n                    <p className=\"error-text\">\n                      The code provided is not valid.\n                    </p>\n                  ) : null}\n                </div>\n                <button type=\"submit\" className=\"redBtn\" disabled={loadBtn}>\n                  Login\n                </button>\n              </div>\n            ) : null}\n          </form>\n        </div>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n          open={alertState.open}\n          onClose={handleAlertClose}\n          autoHideDuration={5000}\n        >\n          <Alert\n            onClose={handleAlertClose}\n            severity={alertState.type}\n            variant=\"filled\"\n          >\n            {alertState.message}\n          </Alert>\n        </Snackbar>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}